---
layout: post
title:  "180305 자바스크립트 일기"
date:   2018-03-05 23:59:59
author: redant
categories: javascript
---

# 할 일 


1. vanilla-utils part 2 풀기


2. 수업듣기

---

##git

버전 컨트롤 시스템

모르는걸 공부 해야하는 두려움

기본 지식을 먼저 마스터하면 두려움이 점점 사라질 것이다.

파일 변경사항을 추적해주는 프로그램

협업을 도와주는 프로그램

리눅스 만든 아저씨가 만듦

1. snapshot

  - 그 순간을 사진기처럼 찰칵 찍어놓음

2. commit

  - snapshot을 생성하는 행위

  - 3가지 정보가 들어있따.(파일변경사항, 바로 이전커밋(parent commit), commit hash(id값))

3. repository

  - 주로 repo라고 줄여 말함

  - 모든 파일들과 파일들의 히스토리가 모여 있음

  - 모든 commit을 포함하고 있는 곳.

  - 개인 컴퓨터나 클라우드 서버(Github)에 있다.

  - 클라우드에서 복사해서 다운받는 행위를 clone이라고 한다.

  - 내 컴퓨터에 없는 내용을 클라우드로부터 추가적으로 다운 받는 행위를 pull이라고 한다.

  - 내 컴퓨터의 변경사항을 클라우드에 추가하는 행위를 push한다고 한다.

  - 

4. branch

  - 하나의 버전을 만든다는 개념

  - 모든 commit들은 branch 내에 존재한다.

  - 하나의 프로젝트 안에 다양한 branch가 있을 수 있다.

  - 항상 메인 branch는 "master" Branch 이다.

5. HEAD

  - 현재 Branch의 가장 마지막 Commit(보통은)

6. Master

  - 모든 프로젝트의 가장 중심이 되는 Branch 이름

7. commit 만들기

  - commit 할 파일들은 "스테이지"에 올려야 한다. 

  - `git add` 라는 명령어로 올린다. 

  - git add . <- 여기서 .은 현재 디렉토리 내의 모든 수정사항을 스테이지에 추가하는 명령어

  - git add src/ 현재 디렉토리 내의 src 디렉토리의 모든 수정사항을 스테이지에 추가.

  - eg. `git add index.html` 

  - git commit -m "blah blah" 

8. github

  - git들의 Hub

  - Git Repository 호스팅 서비스 업체

  - 협업을 가능케 해주는 곳

  - 

9. GUI

  - 많이 있는데 Ken님은 Sourcetree 사용

  - 보통 터미널로 작업이 익숙해진 다음 이용하는 것이 좋고 터미널로 작업하기 애매한 경우에만 쓰는 것이 좋음


---

터미널 명령어는 다음 시간에 

**url:http://eloquentjavascript.net/  => 자바스크립트에 대한 유명한 책인데 전자책으로 소스도 직접 테스트할 수 있고 검색도 가능함. 영어만 읽을 수 있다면 이걸로 배우면 좋음.**




