---
layout: post
title:  "180310 자바스크립트 일기"
date:   2018-03-10 23:59:59
author: redant
categories: javascript
---

# 할 일 


0. Todo 기능 추가하기(캘린더) // js 진행중 list추가, 삭제, 텍스트 이벤트 제작완료


1. setTimeout 다시풀기


2. function 응용해서 풀기


3. 레벨2 알고리즘 문제 하나 풀기 


4. utils 마저 풀기

---


ES2015 강의 시청

`let`으로 변수선언 할 수 있다.

`let`을 쓰면 중괄호가 들어가면 그 중괄호를 기준으로 무조건 스코프가 생성된다.

for 구문 안에서 선언할 경우에는 for 구문 안에서만 생성된다.


babeljs.io // ES2015(ES6) 를 ES5로 변환해주는 사이트


`const` constant 상수, 값이 변하지 않는다. 재할당이 불가능하다.

안의 값은 변경할 수 있다. (추가, 삭제 가능)

역시 중괄호를 기준으로 스코프가 생성된다.


1. function 기능에 rest가 추가됨 

```
function foo (a,b, ...c) { // ...c가 rest 사용하는 방법. 
 
}
```

rest는 항상 매개변수의 끝에 위치해야 하며 모든 인자값을 배열로 반환해주는 역할을 한다.
앞에 a,b 가 있을 경우 인자값에 a,b 값은 ab에 나오네

2. spread일 경우 배열 안에 `arr1 = [1,2,3] arr2 = [4,5,6]이면 total = [...arr1, ...arr2] 하면 [1,2,3,4,5,6]이 나옴`
즉 배열을 풀어서 넣어줌. 발라주는 개념


3. Destructuring (근행님이 가장 많이 쓰는 것 중 하나) 어레이나 오브젝트를 파괴해서 값을 가져옴

Object Destructuring // var { city, state } = address, address라는 오브젝트에 있는 city, state 값을 가져옴.
// var { city: c, state: s } = address, address라는 오브젝트에 있는 city, state값을 변수 c와 s에 각각 넣음.

Array Destructuring // var [ one,two, ,four,five ] = numbers // 변수 one,two,four,five를 선언하고 numbers 어레이 인덱스값에 있는 값을 넣음.

function의 인자값으로도 사용가능


4. function에 초기값 설정

`function foo(num = 3) // num에 값이 들어오지 않을 경우 인자값을 3으로 넣어줌.`

5. String Interpolation
```
const s = 'ken';
console.log(`my name is ${s}`); /// my name is ken // 번거롭게 + 이용해서 합치지 않을 수 있음. 따옴표가 아니라 백틱임.

```

6. Arrow Function  `=>` 커피스크립트에서 폭발적인 반응을 얻어서 추가됨

const fn = (a) => {
	console.log(a);
};

fn();

const fn = a => {  // 인자가 하나인 경우 괄호 생략가능
	console.log(a);
};

const multiply = (a, b) => a * b ;  // return을 사용하지 않고도 바로 계산해서 반환해줌.

=> 함수를 사용할 경우 this 사용에 유의할 것. obj.foo(); 이렇게 하더라도 this가 obj가 아님

``` 
var name = 'window';

const obj = {
	name: 'ken',
	logName: () => {
		console.log(this.name); 
	}
};

obj.logName(); // console에 window가 찍힘
```

함수 선언식으로는 불가능하고 표현식으로만 사용가능.



---










