---
layout: post
title:  "180221 자바스크립트 일기"
date:   2018-02-21 23:59:59
author: redant
categories: javascript
---

어제에 이어서 계속 과제를 진행하려고 한다. 이제는 시간제한을 걸고 ㅎㅎ


Javascript-Basics-2 과제풀기

4. string 산술함수 (stringCalculator)

더하기 / 13시 35분 시작  / 14시 09분 완료

빼기 / 14시 12분 시작 / 14시 26분 중단 /14시 38분 시작 / 14시 53분 완료

곱하기 / 14시 55분 시작 / 15시 01분 완료

나누기 / 15시 02분 시작 / 15시 04분 완료

통합계산 / 15시 05분 시작 / 16시 10분 완료되긴 했으나 eval 이라는 치트키를 사용했으므로 나중에 다시 한번 다른 

방법으로 풀어보려고 한다. 아마 켄님이 eval을 사용하지 말라고 말하는 걸 깜빡하신 듯..

eval(jsString) - 이 함수는 문자열(jsString)이 자바스크립트에서 실행한 코드인지를 확인하고 가능할 경우 실행해서 

반환해주는 함수인데, jsbin에서 harmful(해로운)한 함수라고 하고 mozilla에서도 필요없을 땐 사용하지 말라고 한다. 

이유는 자세히는 모르겠지만 다른 함수에 문제를 일으키는 경우가 있어서 라고 한다. 어떤 경우에 어떤 문제를 일으키는 지 

궁금하다. *나중에 켄님께 질문해보자.* 역시나 안된다고 하심. 보안상 취약점이 있다고 함. 외국에선 'eval is 

evel'이라고도 한다고 하심.

5. timer

16시 12분 시작 / 16시 44분 중단 / 운동갔다와야지 / 19:00 시작 / 19:27 완료

setTimeout()을 setInterval()로 바꾸고 안에 if문으로 제약을 넣어 반복 중단 함수를 만들었다. 함수를 바로 호출하기 

위해 즉시실행함수로 만들었다.


---

#자바스크립트 수업

remoteok.io // 리모트 일거리 찾아주는 사이트,, core hour(remote 작업자들이 공통으로 함께 일하는 시간) 

현실적으로는 힘든 부분들이 많음(게으름, 소통의 부재 등)

개발할 때 여러 스텝 한 번에 나가려고 하지말고 한 스텝씩 차근차근 하면 된다.

그래야 성취감도 느끼고 좌절하지 않음.

진정한 개발은 함께 일하는 것이기 때문에 본인의 만족(자기기준)에 빠지지 말고 

딱 필요한 만큼만 하는게 가장 인정받음.

HTML CSS에 따라서 자바스크립트를 어떻게 활용하는지가 결정됨

비율은 상황마다 다른데 자기 스타일에 맞게 적절하게 하면 됨.

기능 완료하면 되지 지금 당장은 효율 따지지 말 것.

---

본 수업

1. this 마무리
  
  1) 일반함수
  
  2) 닷 노테이션
  
  3) 함수 메소드 - call, bind, apply 를 사용할 때

```javascript
    // 함수 메소드 - call( 인자값 <- this ), bind( ), apply( 인자값 <- this )
    call과 apply 차이
    functionName.call(this값, 1,2,3,4,5...(arguments)인자들, 개수 제한이 없다 );
    functionName.apply(this값, [1,2,3,4,5...](배열 안 요소들이 arguments 매개변수들) 인자값이 this와 배열   딱 2개로 제한됨);
    functionName.bind(this값) -- this값으로 설정된 함수를 만들어줌.
    [ex]var bar = functionName.bind(this값, ( 매개변수, 함수에서 따로 설정도 가능 ))
    bar(); // this값이 설정되어 함수를 호출해줌
```
  4) 함수 앞에 new를 써서 할 경우
```
    this === {}, 빈 오브젝트 
    new 뒤의 경우에는 자동으로 return값이 this가 됨.(심지어 빈 오브젝트를 제외한 어떤 수를 리턴해도 무시됨.)
    함수안에 this.name = 'apple'로 설정 후 호출하면
    name = 'apple' 이 담긴 오브젝트를 리턴함
    this.name
    this.age
    this.sex
    var ken = new Person('ken huh', 35, 'm');
    var ken = new Person('wan huh', 31, 'm');
    생성자 함수일 경우 함수이름 첫 글자를 대문자로 작성함.
    new String <- 이렇게 만들면 안됨(string이 오브젝트 화 됨.), 
    new Function , new object <-- 그냥 만드는 것과 동일함
```



2. Closure

  내부에 있는 개체를 전역에서 실행할 경우에도 변수정보를 기억할 수 있게 되는 능력, 혹은 성격.

  내부 함수는 실행될 때 외부 변수의 값을 기억하고 있다.


3. Prototype 조금

  Constructor = new 키워드와 함께 쓰는 함수. 함수이름 첫 글자를 보통 대문자로 표기합니다.
  
  모든 자바스크립트 객체는 생성자 함수를 이용해 만들어진다.

  객체는 key/value 를 가질 수 있다.(속성/값)

  생성자 함수를 만들 수 있다, 

  noop = 빈 함수를 나타내는 단어

  실무에서는 프로토타입을 임의로 수정하거나 새로운 프로토타입을 만들어 사용하지 않는다.

  prototype.chain <- instance, constructor, prototype 의 속성이 돌고 도는 것?? 아직 완벽히 이해되진 않고 느낌만 알겠다.

  ---

다시 과제 Javascript Basics 2 

4. String 산술함수 통합계산

22:10분 시작 / 텅 비었을 경우와 한 개만 값이 들어왔을 때 해결 / 22:54 중단 / 22:58 재개 / 23:40 중단 / 01:00 재개 / 01:20 완료

총 106분 걸림, 엄청나게 뿌듯하다.

오늘은 여기까지 하자. 디자인 프로토타입 제작도 해야됨..ㅎㅎ



















